name: Run training logic
on:
  schedule:
    - cron: '13 10 * * *'
  push:
    branches:
      - main
      - ng
    paths-ignore:
      - 'README.md'
permissions:
  contents: write
jobs:
  pre-warm:
    runs-on: ubuntu-20.04
    steps:
      - run: curl https://cluebotng-review.toolforge.org/api/export/trainer.json > /dev/null
  trainer:
    runs-on: ubuntu-20.04
    needs: [pre-warm]
    continue-on-error: true
    strategy:
      matrix:
       include:
         - edit-set-name: test1
           edit-set-ids: [1]
         - edit-set-name: test2
           edit-set-ids: [2]
         # - edit-set-name: all
         # - edit-set-name: reported
         #   edit-set-ids: [1, 2]
         # - edit-set-name: original-c
         #   edit-set-ids: [7]
         # - edit-set-name: original-d
         #   edit-set-ids: [9]
         # - edit-set-name: original-testing-c
         #   edit-set-ids: [13]
         # - edit-set-name: original-testing-d
         #   edit-set-ids: [15]
         # - edit-set-name: original-testing-auto
         #   edit-set-ids: [19]
         # - edit-set-name: original-testing-triplet
         #   edit-set-ids: [21]
         # - edit-set-name: random-edits
         #   edit-set-ids: [25]
         # - edit-set-name: very-large
         #   edit-set-ids: [28]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with: { python-version: '3.9' }
      - name: Install cbng-trainer
        run: pip install git+https://github.com/cluebotng/trainer.git@main
      - name: Download reviewed edits
        run: |
          [ ! -z "${{ join(matrix.edit-set-ids) }}" ] && export filter="--edit-set ${{ join(matrix.edit-set-ids, ' --edit-set ') }}"
          cbng-trainer download-edits --output=edits.xml $filter
      - name: Build databases
        run: |
          mkdir -p "new/${{ matrix.edit-set-name }}"
          cbng-trainer build-database --input=edits.xml --output "new/${{ matrix.edit-set-name }}"
      - name: Prepare files
        id: prep
        run: |
          sudo chown -R runner:docker "new/${{ matrix.edit-set-name }}/"
          sudo find new -type f -exec chmod 644 {} \;
          cp edits.xml "new/${{ matrix.edit-set-name }}/" || true
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Compare databases
        run: |
          cbng-trainer compare-database --target "new/${{ matrix.edit-set-name }}/" --output "new/${{ matrix.edit-set-name }}/" || true
      - uses: actions/cache@v2
        id: trainer-output
        with:
          path: "new/**"
          key: "trained-set-${{ matrix.edit-set-name }}"
  release:
    runs-on: ubuntu-20.04
    needs: [trainer]
    steps:
      - uses: actions/cache@v2
        id: trainer-output
        with:
          path: "new/**"
          key: "trained-sets"
          restore-keys: "trained-set-"
      - run: find .
      # - name: Crease a release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     token: "${{ secrets.GITHUB_TOKEN }}"
      #     artifacts: "new/**"
      #     tag: "${{ steps.prep.outputs.date }}"
      # - name: Update README
      #   run: |
      #     pip install requests
      #     ./.github/scripts/update-readme.py
      #
      #     git config user.email "worker@github"
      #     git config user.name "Github Actions"
      #
      #     git add README.md
      #     git commit -m 'Update README'
      #     git push origin ${GITHUB_REF##*/}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
